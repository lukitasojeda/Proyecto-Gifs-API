{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","includes","type","value","onChange","target","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"sLAoCeA,EAjCK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAEjC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAAMR,EAAWS,SAASP,KACpDH,EAAc,CAAEG,GAAH,mBAAkBF,KAC/BG,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,uCCLnBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DACH,mCACJ,uCACE,GAHK,SAKAC,MAAM,GAAD,OAHZ,uCAGY,oBAJR,mCAIQ,cAAiCC,UAAWH,GAA5C,kBAFV,KAHK,cAKbI,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAZvB,kBAgBZL,GAhBY,4CAAH,sDCAPQ,EAAc,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAML,EAAMM,IAAMP,IACvB,kCAAMA,EAAN,WCmBGQ,EApBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEf,ECLwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BoB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAK1B,CAACpB,IAEGqB,EDf2BK,CAAc1B,GAAlCa,EAAd,EAAQP,KAAcc,EAAtB,EAAsBA,QAKtB,OACI,sBAAKJ,UAAU,YAAf,UACI,6BAAKhB,IACHoB,GAAW,wCAELP,EAAOL,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,WEQtCiB,EAvBM,WACjB,MAAoCzC,mBAAS,CAAC,mBAA9C,mBAAOD,EAAP,KAAmBD,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,EAAgBC,WAAaA,IAC1D,uBAEJ,6BAEQA,EAAWuB,KAAK,SAAAR,GAAQ,OACxB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCV1B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.8ee7a20e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories, categories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2 && !categories.includes(inputValue) ){\r\n            setCategories([ inputValue, ...categories ]);\r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default AddCategory;","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n    const api_key = 'YV5aIOS7VFn8aDqi34Rr6uQHpl4nwPfJ';\r\n    const url = 'https://api.giphy.com/v1/gifs/search';\r\n    const limit = 10;\r\n\r\n    const resp = await fetch(`${url}?api_key=${api_key}&q=${ encodeURI( category )}&limit=${limit}`)\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport \"../index.css\";\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport \"animate.css\";\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    // console.log( loading );\r\n \r\n\r\n    return (\r\n        <div className=\"card-grid\">\r\n            <h3>{category}</h3>\r\n            { loading && <p>Loading</p> }\r\n                {\r\n                    images.map( img => {\r\n                        return <GifGridItem key={img.id} {...img} />\r\n                    })\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n\r\n            }\r\n            )\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Rick and Morty']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } categories={ categories } />\r\n            <hr />\r\n\r\n        <ol>\r\n            {\r\n                categories.map( category => \r\n                <GifGrid \r\n                    key={ category }\r\n                    category={ category } \r\n                />\r\n                )\r\n            }\r\n        </ol>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}